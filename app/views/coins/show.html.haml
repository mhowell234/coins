%p#notice= notice

.actions
  %span.add= link_to "New #{@coin.name} Coin", new_coin_value_coin_mint_coin_path(@coin_value, @coin)
  |
  %span.edit= link_to 'Edit', edit_coin_value_coin_path(@coin_value)
  |
  %span.delete= link_to 'Delete', coin_value_coin_path(@coin_value), :method => :delete, :data => { :confirm => 'Are you sure?' }
  |
  %span.back= link_to 'Back', coin_value_coins_path(@coin_value)

%h1
  = @coin.name
  \- #{@coin.coin_value.name}

%p.field.data-info
  (#{@coin.years})

- if @coin.has_photo?
  %p.align-right
    = image_tag @coin.photo_path, :width => '300'

.expandable-max
  %p.description= raw @coin.description
  
  
- @mint_coins_by_grouping.each do |grouping|
  - if grouping['title'] != ''
    %h2= grouping['title']
  - else
    %h2= 'Coins'
  
  %table.table
    %thead
      %tr
        %th Coin
        %th # Minted
        %th # Proof Minted
        %th
        %th
    %tbody
      - grouping['mint_coins'].each do |mint_coin|
        %tr
          %td= link_to mint_coin.title, [@coin_value, @coin, mint_coin]
          %td
            - if mint_coin.number_minted > 0 then
              = number_with_delimiter(mint_coin.number_minted, :delimiter => ',')
            - else
              %span.dash -
          %td
            - if mint_coin.number_proof_minted > 0 then
              = number_with_delimiter(mint_coin.number_proof_minted, :delimiter => ',')
            - else
              %span.dash -
          %td
            %span.edit= link_to 'Edit', edit_coin_value_coin_mint_coin_path(@coin_value, @coin, mint_coin)
          %td
            %span.delete= link_to 'Destroy', [@coin_value, @coin, mint_coin], :method => :delete, :data => { :confirm => 'Are you sure?' }
  %br
  
%br
  