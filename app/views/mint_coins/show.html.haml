%p#notice= notice

.actions
  %span.add= link_to "New #{@coin.name} Coin", new_coin_mint_coin_path(@coin)
  |
  %span.edit= link_to 'Edit', edit_coin_mint_coin_path(@coin)
  |
  %span.delete= link_to 'Delete', coin_mint_coin_path(@coin), :method => :delete, :data => { :confirm => 'Are you sure?' }
  |
  %span.view= link_to "Valuations", mint_coin_valuations_path(@mint_coin)
  |
  %span.back= link_to 'Back', coin_mint_coins_path(@coin)

%h1= "#{@mint_coin.title} - #{@mint_coin.coin.name} #{@mint_coin.coin.coin_value.name}"

- if @mint_coin.number_minted > 0 then
  %p
    %b Number Minted:
    = number_with_delimiter(@mint_coin.number_minted)
  
- if @mint_coin.number_proof_minted > 0 then
  %p
    %b Number Proof Minted:
    = number_with_delimiter(@mint_coin.number_proof_minted)

%br

- if @coin.has_thumbnails?
  = raw(show_photos(@coin.get_thumbnails, :size=>300))

.expandable-max
  %p.description= raw @coin.description
  
%div.visualClear
%br

%div.grouping
  %h2= "Valuations - By Year"
  %div.grouping-data
    .actions
      %span.add= link_to "New Valuation", new_mint_coin_valuation_path(@mint_coin)

    - all_valuations = @mint_coin.get_valuations_grouped_by_year
    - if not all_valuations.nil? and all_valuations.length > 0
      - data = all_valuations[:data]
      - scales = all_valuations[:scales_per_year]
      - years = data.keys.sort { |x, y| y <=> x } # Sort in reverse order
      
      - years.each do |year|
        %h3= year
        
        - scales_for_year = scales[year]
        %table.table
          %thead
            %tr
              %th Agency
              - scales_for_year.each do |scale|
                %th= scale
          %tbody
            - agencies = data[year].keys
            - agencies.each do |agency|
              %tr
                %td= agency
                - ratings = data[year][agency]
                - scales_for_year.each do |scale|
                  - if not ratings.has_key?(scale)
                    %td
                  - else
                    - value = ratings[scale]
                    %td= number_to_currency(value, :unit => "$", :precision => (value.round == value) ? 0 : 2)
    - else
      %p
        %b= "No Valuations Defined"
  %div.visualClear
  
- valuations_by_agency = @mint_coin.get_valuations_grouped_by_agency
- if not valuations_by_agency.nil? and valuations_by_agency.length > 0
  %div.grouping
    %h2= "Valuations - By Agency"
    %div.grouping-data
      .actions
        %span.add= link_to "New Valuation", new_mint_coin_valuation_path(@mint_coin)

      - data = valuations_by_agency[:data]
      - scales = valuations_by_agency[:scales_per_agency]
      - agencies = data.keys.sort { |x, y| y <=> x } # Sort in reverse order
      
      - agencies.each do |agency|
        %h3= agency
        
        - scales_for_agency = scales[agency]
        %table.table
          %thead
            %tr
              %th Year
              - scales_for_agency.each do |scale|
                %th= scale
          %tbody
            - years = data[agency].keys.sort { |x, y| y <=> x } # Sort in reverse order
            - years.each do |year|
              %tr
                %td= year
                - ratings = data[agency][year]
                - scales_for_agency.each do |scale|
                  - if not ratings.has_key?(scale)
                    %td
                  - else
                    - value = ratings[scale]
                    %td= number_to_currency(value, :unit => "$", :precision => (value.round == value) ? 0 : 2)
    %div.visualClear
  


- melt_values = @mint_coin.get_melt_values
- if not melt_values.nil? and melt_values.length > 0
  %div.grouping
    %h2= "Valuations - By Melt Value"
    %div.grouping-data

      %table.table
        %thead
          %tr
            %th Metal
            %th Price
            %th Percentage
            %th Value
        %tbody
          - melt_values.each do |melt|
            - if melt['name'] == melt_values.last.fetch('name')
              - is_total_row = true
            - else
              - is_total_row = false
              
            %tr
              %td
                - if is_total_row 
                  %b= melt['name']
                - else
                  %span= melt['name']
              
              - if melt.has_key?('price_per_unit')
                - pricePerUnit = number_to_currency(melt['price_per_unit'], :unit => "$", :precision => (melt['price_per_unit'].round == melt['price_per_unit']) ? 0 :2)
                - unitText = "#{pricePerUnit} per #{melt['unit']}"
              - else
                - unitText = ''
              %td= unitText
              
              - if melt.has_key?('percentage')
                - percentageText = number_to_percentage(melt['percentage'], :precision => ((melt['percentage']*100).round == (melt['percentage']*100)) ? 0 : 2)
              - else
                - percentageText = ''
              %td= percentageText
              
              - value = number_to_currency(melt['value'], :unit => "$", :precision => (melt['value'].round == melt['value']) ? 0 : 2)
              %td
                - if is_total_row
                  %b= value
                - else
                  %span= value
    %div.visualClear


%div.grouping
  %h2= "Attributes"
  %div.grouping-data
    .actions
      %span.add= link_to "New Attribute", new_mint_coin_mint_coin_attribute_path(@mint_coin)

    - if @mint_coin.mint_coin_attributes.size > 0
      %table.table
        %thead
          %tr
            %th Type
            %th Value
            %th
        %tbody
          - @mint_coin.mint_coin_attributes.each do |attrib|
            %tr
              %td= attrib.attribute_type.value
              %td= attrib.value
              %td
                %span.edit= link_to 'Edit', edit_mint_coin_mint_coin_attribute_path(@mint_coin, attrib)
                |
                %span.delete= link_to 'Delete', [@mint_coin, attrib], :method => :delete, :data => { :confirm => 'Are you sure?' }
    - else
      %p
        %b= "No Attributes Defined"
    %div.visualClear


%div.grouping
  %h2= "Composition"
  %div.grouping-data
    .actions
      %span.add= link_to "New Composition", new_mint_coin_composition_path(@mint_coin)

    - if @mint_coin.compositions.size > 0
      %table.table
        %thead
          %tr
            %th Metal
            %th Percentage
            %th
        %tbody
          - @mint_coin.compositions.each do |comp|
            %tr
              %td= comp.precious_metal.name
              %td= number_to_percentage(comp.percentage, :precision => ((comp.percentage*100).round == (comp.percentage*100)) ? 0 : 2)              
              %td
                %span.edit= link_to 'Edit', edit_mint_coin_composition_path(@mint_coin, comp)
                |
                %span.delete= link_to 'Delete', [@mint_coin, comp], :method => :delete, :data => { :confirm => 'Are you sure?' }
    - else
      %p
        %b= "No Compositions Defined"
    %div.visualClear

